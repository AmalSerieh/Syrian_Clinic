<?php

namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use App\Models\Patient_record;
use Illuminate\Http\Request;

class PatientRecordController extends Controller
{
    // โ ุนุฑุถ ุงูุณุฌู ุงูุญุงูู ูููุฑูุถ ุฃู ุงูุทุจูุจ
    public function show($id)
    {
        $record = Patient_record::findOrFail($id);
        $this->authorize('view', $record);

        return response()->json([
            'record' => $record->load([
                'diseases',
                'medications',
                'operations',
                'tests',
                'allergies',
                'familyHistories',
                'medicalFiles',
                'patient_profile'
            ])
        ]);
    }

    // โ ุฅูุดุงุก ุณุฌู ูููุฑูุถ (ูุฑุฉ ูุงุญุฏุฉ ููุท)
    public function store(Request $request)
    {
        // ุชุญูู ูู ุฃู ุงููุฑูุถ ูุฏูู ุณุฌู ุทุจู ูุณุจู
        if (Patient_record::where('patient_id', $request->patient_id)->exists()) {
            return response()->json(['message' => 'ุงููุฑูุถ ูุฏูู ุณุฌู ุทุจู ูุณุจู.'], 403);
        }

        // ุชุฃูุฏ ูู ุฃู ุงููุฑูุถ ููููู ุฅูุดุงุก ุงูุณุฌู ุงูุทุจู ููุท ุฅุฐุง ูู ููู ูุฏ ุฃูุดุฃู ูุณุจููุง
        $this->authorize('create', Patient_record::class);

        $validated = $request->validate([
            'patient_id' => 'required|exists:patients,id|unique:patient_records,patient_id',
            // ุฃู ุจูุงูุงุช ุฅุถุงููุฉ ููุณุฌู ูููู ุฅุถุงูุชูุง ููุง
        ]);

        $record = Patient_record::create($validated);
        // ุฅูุดุงุก ุงูุชูุฑุนุงุช ุงูุซูุงููุฉ ูุงุฑุบุฉ
        $record->diseases()->createMany([]);
        $record->medications()->createMany([]);
        $record->operations()->createMany([]);
        $record->tests()->createMany([]);
        $record->allergies()->createMany([]);
        $record->familyHistories()->createMany([]);
        $record->medicalFiles()->createMany([]);
        $record->patient_profile()->create();  // ุงููุณู ุงูุฃูู ุงููุงุฑุบ


        return response()->json([
            'message' => 'ุชู ุฅูุดุงุก ุงูุณุฌู ุงูุทุจู ุจูุฌุงุญ.',
            'record' => $record->load([
                'diseases',
                'medications',
                'operations',
                'tests',
                'allergies',
                'familyHistories',
                'medicalFiles',
                'patient_profile'
            ])
        ], 201);
    }

    // ๐ ุชุนุฏูู ุงูุณุฌู (ุงูุทุจูุจ ููุท)
    public function update(Request $request, $id)
    {
        $record = Patient_record::findOrFail($id);
        $this->authorize('update', $record);

        $validated = $request->validate([
            // ุถู ุงูุญููู ุงููุงุจูุฉ ููุชุนุฏูู ููุง ุญุณุจ ุชุตูููู
        ]);

        $record->update($validated);

        return response()->json([
            'message' => 'ุชู ุชุญุฏูุซ ุงูุณุฌู ุงูุทุจู ุจูุฌุงุญ.',
            'record' => $record
        ]);
    }

    // โ ุญุฐู ุงูุณุฌู (ุงุฎุชูุงุฑู - ุงูุทุจูุจ ููุท)
    public function destroy($id)
    {
        $record = Patient_record::findOrFail($id);
        $this->authorize('delete', $record);

        $record->delete();

        return response()->json([
            'message' => 'ุชู ุญุฐู ุงูุณุฌู ุงูุทุจู ุจูุฌุงุญ.'
        ]);
    }
}
